[
    {
        "label": "json",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "json",
        "description": "json",
        "detail": "json",
        "documentation": {}
    },
    {
        "label": "os.path",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os.path",
        "description": "os.path",
        "detail": "os.path",
        "documentation": {}
    },
    {
        "label": "Person",
        "importPath": "object.Person",
        "description": "object.Person",
        "isExtraImport": true,
        "detail": "object.Person",
        "documentation": {}
    },
    {
        "label": "Letter",
        "importPath": "object.Lettre",
        "description": "object.Lettre",
        "isExtraImport": true,
        "detail": "object.Lettre",
        "documentation": {}
    },
    {
        "label": "Letter",
        "importPath": "object.Lettre",
        "description": "object.Lettre",
        "isExtraImport": true,
        "detail": "object.Lettre",
        "documentation": {}
    },
    {
        "label": "datetime",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "datetime",
        "description": "datetime",
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "Document",
        "importPath": "docx",
        "description": "docx",
        "isExtraImport": true,
        "detail": "docx",
        "documentation": {}
    },
    {
        "label": "WD_ALIGN_PARAGRAPH",
        "importPath": "docx.enum.text",
        "description": "docx.enum.text",
        "isExtraImport": true,
        "detail": "docx.enum.text",
        "documentation": {}
    },
    {
        "label": "Cm",
        "importPath": "docx.shared",
        "description": "docx.shared",
        "isExtraImport": true,
        "detail": "docx.shared",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "tkinter",
        "description": "tkinter",
        "isExtraImport": true,
        "detail": "tkinter",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "tkinter",
        "description": "tkinter",
        "isExtraImport": true,
        "detail": "tkinter",
        "documentation": {}
    },
    {
        "label": "ttk",
        "importPath": "tkinter",
        "description": "tkinter",
        "isExtraImport": true,
        "detail": "tkinter",
        "documentation": {}
    },
    {
        "label": "messagebox",
        "importPath": "tkinter",
        "description": "tkinter",
        "isExtraImport": true,
        "detail": "tkinter",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "tkinter",
        "description": "tkinter",
        "isExtraImport": true,
        "detail": "tkinter",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "tkinter",
        "description": "tkinter",
        "isExtraImport": true,
        "detail": "tkinter",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "tkinter",
        "description": "tkinter",
        "isExtraImport": true,
        "detail": "tkinter",
        "documentation": {}
    },
    {
        "label": "ttk",
        "importPath": "tkinter",
        "description": "tkinter",
        "isExtraImport": true,
        "detail": "tkinter",
        "documentation": {}
    },
    {
        "label": "messagebox",
        "importPath": "tkinter",
        "description": "tkinter",
        "isExtraImport": true,
        "detail": "tkinter",
        "documentation": {}
    },
    {
        "label": "filedialog",
        "importPath": "tkinter",
        "description": "tkinter",
        "isExtraImport": true,
        "detail": "tkinter",
        "documentation": {}
    },
    {
        "label": "UI.menu_bar",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "UI.menu_bar",
        "description": "UI.menu_bar",
        "detail": "UI.menu_bar",
        "documentation": {}
    },
    {
        "label": "create",
        "importPath": "UI.menu_bar",
        "description": "UI.menu_bar",
        "isExtraImport": true,
        "detail": "UI.menu_bar",
        "documentation": {}
    },
    {
        "label": "MainWindow",
        "importPath": "MainWindow",
        "description": "MainWindow",
        "isExtraImport": true,
        "detail": "MainWindow",
        "documentation": {}
    },
    {
        "label": "header_length",
        "importPath": "email.base64mime",
        "description": "email.base64mime",
        "isExtraImport": true,
        "detail": "email.base64mime",
        "documentation": {}
    },
    {
        "label": "join",
        "importPath": "ntpath",
        "description": "ntpath",
        "isExtraImport": true,
        "detail": "ntpath",
        "documentation": {}
    },
    {
        "label": "UI.tab",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "UI.tab",
        "description": "UI.tab",
        "detail": "UI.tab",
        "documentation": {}
    },
    {
        "label": "UI.toolbar",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "UI.toolbar",
        "description": "UI.toolbar",
        "detail": "UI.toolbar",
        "documentation": {}
    },
    {
        "label": "JSON_manager",
        "importPath": "object.Json_Manager",
        "description": "object.Json_Manager",
        "isExtraImport": true,
        "detail": "object.Json_Manager",
        "documentation": {}
    },
    {
        "label": "JSON_manager",
        "kind": 6,
        "importPath": "object.Json_Manager",
        "description": "object.Json_Manager",
        "peekOfCode": "class JSON_manager():\n    def __init__(self,root) :\n        self.root = root\n    def create_json(self):\n        self.root.associate()\n        exp_json = {'expediteur': {'nom': self.root.expediteur.nom,\n                    'prenom': self.root.expediteur.prenom,\n                                   'adresse': self.root.expediteur.adresse,\n                                   'cp': self.root.expediteur.cp,\n                                   'ville': self.root.expediteur.ville,",
        "detail": "object.Json_Manager",
        "documentation": {}
    },
    {
        "label": "Letter",
        "kind": 6,
        "importPath": "object.Lettre",
        "description": "object.Lettre",
        "peekOfCode": "class Letter:\n    def __init__(self,root):\n        self.root = root\n    def save_letter(self, expediteur, destinataire, obj, msg):\n        document = Document()\n        sections = document.sections\n        for section in sections:\n            section.top_margin = Cm(3.81)\n            section.bottom_margin = Cm(2)\n            section.left_margin = Cm(2)",
        "detail": "object.Lettre",
        "documentation": {}
    },
    {
        "label": "Person",
        "kind": 6,
        "importPath": "object.Person",
        "description": "object.Person",
        "peekOfCode": "class Person:\n    def __init__(self,nom=\"\",prenom=\"\",adresse=\"\",cp=\"\",ville=\"\",tel = \"\", mail = \"\"):\n        self.nom = nom\n        self.prenom = prenom\n        self.adresse = adresse\n        self.cp = cp\n        self.ville = ville\n        self.tel = tel\n        self.mail = mail",
        "detail": "object.Person",
        "documentation": {}
    },
    {
        "label": "create",
        "kind": 2,
        "importPath": "UI.menu_bar",
        "description": "UI.menu_bar",
        "peekOfCode": "def create(self):\n        menu_bar = Menu(self)\n        menu_file = Menu(menu_bar, tearoff=0)\n        menu_file.add_command(label=\"Nouveau\", command=self.do_something)\n        menu_file.add_command(label=\"Ouvrir\", command=self.do_something)\n        menu_file.add_separator()\n        menu_file.add_command(label=\"Enregistrer sous...\", command=self.create_letter)\n        menu_import = Menu(menu_file, tearoff=0)\n        menu_import.add_command(label=\"Base Excel\", command=self.do_something)\n        menu_file.add_cascade(label=\"Importer\", menu=menu_import)",
        "detail": "UI.menu_bar",
        "documentation": {}
    },
    {
        "label": "create",
        "kind": 2,
        "importPath": "UI.tab",
        "description": "UI.tab",
        "peekOfCode": "def create(self):\n        tabsystem = ttk.Notebook(self, width=300)\n        # Create new tabs using Frame widget\n        tab1 = Frame(tabsystem)\n        tab2 = Frame(tabsystem)\n        tab3 = Frame(tabsystem)\n        tabsystem.add(tab1, text='Expéditeur')\n        tabsystem.add(tab2, text='Destinataires')\n        tabsystem.add(tab3, text='Références')\n        tabsystem.pack(side=LEFT, fill=Y)",
        "detail": "UI.tab",
        "documentation": {}
    },
    {
        "label": "create",
        "kind": 2,
        "importPath": "UI.toolbar",
        "description": "UI.toolbar",
        "peekOfCode": "def create(self):\n        toolbar = Frame(self)\n        newButton = Button(toolbar, text=\"Nouveau\", command=self.do_something)\n        newButton.pack(side=LEFT, padx=2, pady=2)\n        saveButton = Button(toolbar, text=\"Générer\",\n                            command=self.create_letter)\n        saveButton.pack(side=LEFT, padx=2, pady=2)\n        settingsButton = Button(toolbar, text=\"Settings\",\n                                command=self.do_something)\n        settingsButton.pack(side=RIGHT, padx=2, pady=2)",
        "detail": "UI.toolbar",
        "documentation": {}
    },
    {
        "label": "window",
        "kind": 5,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "window = MainWindow()\nwindow.title(\"Letter Generator\")\nwindow.iconbitmap(\"assets/icon.ico\")\nwindow.minsize(600, 600)\nwindow.protocol(\"WM_DELETE_WINDOW\", window.quit)\nwindow.mainloop()",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "MainWindow",
        "kind": 6,
        "importPath": "MainWindow",
        "description": "MainWindow",
        "peekOfCode": "class MainWindow(Tk):\n    def __init__(self):\n        Tk.__init__(self)\n        self.json_manager = JSON_manager(self)\n        self.json_manager.load_json()\n        toolbar.create(self)\n        tab.create(self)\n        self.create_body()\n    def create_body(self):\n        body = Frame(self)",
        "detail": "MainWindow",
        "documentation": {}
    }
]